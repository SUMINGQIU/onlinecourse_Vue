{"version":3,"file":"js/postvideo.c7018a53.js","mappings":"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","sources":["webpack://onlinelearning/./src/api/user/index.js","webpack://onlinelearning/./src/views/NormalRegister.vue","webpack://onlinelearning/./src/views/NormalRegister.vue?42be","webpack://onlinelearning/./src/views/PostVideo.vue","webpack://onlinelearning/./src/api/upload/index.js","webpack://onlinelearning/./src/views/PostVideo.vue?4e2b","webpack://onlinelearning/./src/views/RegisterUser.vue","webpack://onlinelearning/./src/views/RegisterUser.vue?50a9","webpack://onlinelearning/./src/views/ShowVideo.vue","webpack://onlinelearning/./src/views/ShowVideo.vue?7c20"],"sourcesContent":["import axios from 'axios'\r\n\r\nconst logUser = form => axios.post('/api/v1/user/login', form).then(res => res.data)\r\n\r\nconst regUser = form => axios.post(`/api/v1/user/register`, form).then(res => res.data)\r\n\r\nexport {\r\n    logUser,\r\n    regUser,\r\n}","<template>\r\n    <div class=\"registerNormalUser\">\r\n        <h2>欢迎注册 </h2>\r\n        <el-form ref=\"form\" :model=\"form\" label-width=\"80px\">\r\n            <el-form-item label=\"用户名\">\r\n                <el-input v-model=\"form.user_name\" style=\"width: 300px;\"></el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"用户密码\">\r\n                <el-input v-model=\"form.password\" style=\"width: 300px;\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"再次输入\">\r\n                <el-input v-model=\"form.password_confirm\" style=\"width: 300px;\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"邮箱\">\r\n                <el-input v-model=\"form.nickname\" style=\"width: 300px;\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-button type=\"primary\" @click=\"OnSubmit\">注册</el-button>\r\n            </el-form-item>\r\n            \r\n        </el-form>\r\n    </div>  \r\n  </template>\r\n  \r\n  <script>\r\n    // @ is an alias to /src\r\n    // import * as API from '@/api/video/'\r\n    import * as regAPI from '@/api/user/'\r\n    // use the index.js as API to post videos\r\n    export default {\r\n        name: 'RegisterNormalUser',\r\n        data() {\r\n            return {\r\n                form: {\r\n                    nickname:'',\r\n                    user_name: '',\r\n                    password: '',\r\n                    password_confirm: '',\r\n                },\r\n            };\r\n        },\r\n        methods: {\r\n            OnSubmit() {\r\n                regAPI.regUser(this.form).then((res) => {\r\n                    console.log(res);\r\n                    console.log(res.msg);\r\n                    if(res.msg != null && res.status != 0) {\r\n                        if(res.msg == '两次输入的密码不相同') {\r\n                            this.$notify.error({\r\n                                title: '登录失败',\r\n                                message: res.msg,\r\n                            });\r\n                        } else if (res.msg == '用户名已经注册') {\r\n                            this.$notify.error({\r\n                                title: '用户名已经注册',\r\n                                message: res.msg,\r\n                            });\r\n                        }  else if (res.msg == '昵称被占用') {\r\n                            this.$notify.error({\r\n                                title: '邮箱已注册',\r\n                                // message: res.msg,\r\n                            });\r\n                        } else if (res.msg == '密码加密失败') {\r\n                            this.$notify.error({\r\n                                title: '密码加密失败',\r\n                                message: res.msg,\r\n                            });\r\n                        } else {\r\n                            this.$notify.error({\r\n                                title: '注册失败,请检查密码，九位及以上字母与数字！',\r\n                                message: res.msg,\r\n                            });\r\n                        }\r\n                    } else {\r\n                        this.$notify({\r\n                            title: '注册成功',\r\n                            type: 'success',\r\n                        });\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    this.$notify.error({\r\n                        title: '404 Not found',\r\n                        message: error,\r\n                        \r\n                    });\r\n                });\r\n            },\r\n        },\r\n        components: {\r\n                \r\n        },\r\n    };\r\n  </script>\r\n  \r\n  <style>\r\n  .registerNormalUser {\r\n    margin: 50px 0 0 300px;\r\n  }\r\n</style>","import { render } from \"./NormalRegister.vue?vue&type=template&id=074b2d1d\"\nimport script from \"./NormalRegister.vue?vue&type=script&lang=js\"\nexport * from \"./NormalRegister.vue?vue&type=script&lang=js\"\n\nimport \"./NormalRegister.vue?vue&type=style&index=0&id=074b2d1d&lang=css\"\n\nimport exportComponent from \"D:\\\\FullStackDevelop\\\\OnlineCourseLearning\\\\onlinelearning\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div class=\"post-video\">\r\n        <h2>欢迎投稿： </h2>\r\n        <el-form ref=\"form\" :model=\"form\" label-width=\"80px\">\r\n            <el-form-item label=\"标题\">\r\n                <el-input v-model=\"form.title\" style=\"width: 600px;\"></el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"视频地址\">\r\n                <el-input type=\"url \" v-model=\"form.url\" style=\"width: 600px;\"></el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"描述\">\r\n                <el-input type=\"textarea\" v-model=\"form.info\" style=\"width: 600px;\"></el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"视频封面\">\r\n                <el-upload\r\n                    class=\"avatar-uploader\"\r\n                    label=\"描述\"\r\n                    action=\"\"\r\n                    ref=\"upload\"\r\n                    :on-preview=\"handlePictureCardPreview\"\r\n                    :on-success=\"handleAvatarSuccess\"\r\n                    :before-upload=\"fnBeforeUpload\"\r\n                    :http-request=\"fnUploadRequest\"\r\n                    :show-file-list=\"false\"\r\n                >\r\n\r\n                    <img v-if=\"imageUrl\" :src=\"imageUrl\" class=\"avatar\">\r\n                    <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n                    <template v-slot:tip>\r\n                        <div class=\"el-upload__tip\">只能上传png和jpg文件，大小不超过2MB</div>\r\n                    </template>\r\n                </el-upload>\r\n            </el-form-item>\r\n\r\n            <el-dialog :visible=\"dialogVisible\" @update:visible=\"dialogVisible = $event\">\r\n                <img width=\"100%\" :src=\"dialogImageUrl\" alt=\"\">\r\n            </el-dialog>\r\n\r\n            <el-form-item>\r\n                <el-button type=\"primary\" @click=\"OnSubmit\">立即创建</el-button>\r\n            </el-form-item>\r\n            \r\n        </el-form>\r\n    </div>  \r\n  </template>\r\n  \r\n  <script>\r\n    // @ is an alias to /src\r\n    import * as API from '@/api/video/'\r\n    import uploadAPI from '@/api/upload/'\r\n    // use the index.js as API to post videos\r\n    export default {\r\n        name: 'PostVideo ',\r\n        data() {\r\n            return {\r\n                imageUrl: '',\r\n                dialogImageUrl: '',\r\n                dialogVisible: false,\r\n                form: {\r\n                    title: '',\r\n                    info: '',\r\n                    url:'',\r\n                    avatar:'',\r\n                },\r\n            };\r\n        },\r\n        methods: {\r\n            handleAvatarSuccess(res, file) {\r\n                this.imageUrl = URL.createObjectURL(file.raw);\r\n            },\r\n            fnBeforeUpload(file) {\r\n                const isImage =  (file.type === 'image/png' || file.type === 'image/jpeg');\r\n                const isLt2M = file.size / 1024 / 1024 < 2;\r\n                if (!isImage) {\r\n                    this.$message.error(\"只能接受PNG格式！\");\r\n                }\r\n                if (!isLt2M) {\r\n                    this.$message.error(\"上传图片不能超过 2MB！\");\r\n                    \r\n                }\r\n                return isImage && isLt2M;\r\n            },\r\n            fnUploadRequest(option) {\r\n                uploadAPI(option.file.name).then((res) => {\r\n                    const oReq = new XMLHttpRequest();\r\n                    oReq.open('PUT', res.data.put, true);\r\n                    oReq.withCredentials = true;\r\n                    oReq.send(option.file);\r\n                    oReq.onload = () => {\r\n                        this.imageUrl = res.data.get;\r\n                        this.form.avatar = res.data.key;\r\n                    };\r\n                    \r\n                }).catch((error) => {\r\n                    this.$notify.error({\r\n                        title: \"网络错误，或者服务器宕机\",\r\n                        message: error,\r\n                    });\r\n                });\r\n            },\r\n            OnSubmit() {\r\n                API.postVideo(this.form).then((res) => {\r\n                    if(res.code > 0) {\r\n                        this.$notify.error({\r\n                            title: '投稿失败',\r\n                            message: res.msg,\r\n                        });\r\n                    } else {\r\n                        this.$notify({\r\n                            title: '投稿成功',\r\n                            message: `您的投稿ID为${res.data.id}`,\r\n                            type: 'success',\r\n                        });\r\n                    }\r\n                    \r\n                }).catch((error) => {\r\n                    this.$notify.error({\r\n                        title: '404 Not found',\r\n                        message: error,\r\n                        \r\n                    });\r\n                });\r\n            },\r\n            handlePictureCardPreview(file) {\r\n                this.dialogImageUrl = file.url;\r\n                this.dialogVisible = true;\r\n            },  \r\n        },\r\n        components: {\r\n                \r\n        },\r\n    };\r\n  </script>\r\n  \r\n<style>\r\n  .avatar-uploader .el-upload {\r\n    border: 1px dashed #d9d9d9;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    position: relative;\r\n    overflow: hidden;\r\n  }\r\n  .avatar-uploader .el-upload:hover {\r\n    border-color: #409EFF;\r\n  }\r\n  .avatar-uploader-icon {\r\n    font-size: 28px;\r\n    color: #8c939d;\r\n    width: 178px;\r\n    height: 178px;\r\n    line-height: 178px;\r\n    text-align: center;\r\n  }\r\n  .avatar {\r\n    width: 178px;\r\n    height: 178px;\r\n    display: block;\r\n  }\r\n  .post-video {\r\n    margin: 50px 0 0 300px;\r\n  }\r\n</style>","import axios from 'axios'\r\n\r\nconst postUploadToken = fileName => axios.post('/api/v1/upload/token', {filename:fileName}).then(res => res.data);\r\n\r\nexport default postUploadToken","import { render } from \"./PostVideo.vue?vue&type=template&id=3b5e07d2\"\nimport script from \"./PostVideo.vue?vue&type=script&lang=js\"\nexport * from \"./PostVideo.vue?vue&type=script&lang=js\"\n\nimport \"./PostVideo.vue?vue&type=style&index=0&id=3b5e07d2&lang=css\"\n\nimport exportComponent from \"D:\\\\FullStackDevelop\\\\OnlineCourseLearning\\\\onlinelearning\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div class=\"registerUser\">\r\n        <h2>欢迎登录 </h2>\r\n        <el-form ref=\"form\" :model=\"form\" label-width=\"80px\">\r\n            <el-form-item label=\"用户名\">\r\n                <el-input v-model=\"form.user_name\" style=\"width: 300px;\"></el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"用户密码\">\r\n                <el-input v-model=\"form.password\" style=\"width: 300px;\"></el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item>\r\n                <el-button type=\"primary\" @click=\"OnSubmit\">登录</el-button>\r\n            </el-form-item>\r\n            \r\n        </el-form>\r\n    </div>  \r\n  </template>\r\n  \r\n  <script>\r\n    // @ is an alias to /src\r\n    // import * as API from '@/api/video/'\r\n    import * as logAPI from '@/api/user/'\r\n    // use the index.js as API to post videos\r\n    export default {\r\n        name: 'RegisterUser',\r\n        data() {\r\n            return {\r\n                form: {\r\n                    user_name: '',\r\n                    password: '',\r\n                },\r\n            };\r\n        },\r\n        methods: {\r\n            OnSubmit() {\r\n                logAPI.logUser(this.form).then((res) => {\r\n                    if(res.status != 0) {\r\n                        this.$notify.error({\r\n                            title: '登录失败',\r\n                            message: res.msg,\r\n                        });\r\n                    } else {\r\n                        this.$notify({\r\n                            title: '登录成功',\r\n                            type: 'success',\r\n                        });\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    this.$notify.error({\r\n                        title: '404 Not found',\r\n                        message: error,\r\n                        \r\n                    });\r\n                });\r\n            },\r\n        },\r\n        components: {\r\n                \r\n        },\r\n    };\r\n  </script>\r\n  \r\n  <style>\r\n  .registerUser {\r\n    margin: 50px 0 0 300px;\r\n  }\r\n</style>","import { render } from \"./RegisterUser.vue?vue&type=template&id=55917524\"\nimport script from \"./RegisterUser.vue?vue&type=script&lang=js\"\nexport * from \"./RegisterUser.vue?vue&type=script&lang=js\"\n\nimport \"./RegisterUser.vue?vue&type=style&index=0&id=55917524&lang=css\"\n\nimport exportComponent from \"D:\\\\FullStackDevelop\\\\OnlineCourseLearning\\\\onlinelearning\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div class=\"post-video\">\r\n      <div class=\"video-header\">\r\n        <h2>{{video.title}}</h2>\r\n        <div class=\"video-data\">\r\n            {{video.view}}\r\n        </div>\r\n      </div>\r\n      <videoPlay\r\n        v-bind=\"playerOptions\"\r\n        :poster=\"playerOptions.postUrl\"\r\n      />\r\n      <div class=\"video-info\">\r\n        <pre>{{video.info}}</pre>\r\n      </div>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\n    import { ref, onBeforeMount } from 'vue';\r\n    import { useRoute } from 'vue-router';\r\n    import \"vue3-video-play/dist/style.css\";\r\n    import { videoPlay } from \"vue3-video-play\";\r\n    import { reactive } from \"vue\";\r\n    // import Vue3VideoPlayer from 'vue3-video-player';\r\n    // import 'vue3-video-player/dist/vue3-video-player.css'\r\n    import * as API from '@/api/video/';\r\n    // import moment from 'moment';\r\n\r\n    export default {\r\n        components: {\r\n            videoPlay\r\n        },\r\n        name: 'ShowVideo',\r\n        setup() {\r\n\r\n            const video = ref({});\r\n            const route = useRoute();\r\n            const videoUrl = ref('');\r\n            const postUrl = ref(''); \r\n            const playerOptions = reactive({\r\n                width: \"800px\", //播放器宽度\r\n                height: \"450px\", //播放器高度\r\n                color: \"#409eff\", //主题色\r\n                // src: \"https://cdn.jsdelivr.net/gh/xdlumia/files/video-play/IronMan.mp4\", //视频源\r\n                src: videoUrl,\r\n                postUrl: postUrl,\r\n                autoplay: false,\r\n                muted: true,\r\n                webFullScreen: false,\r\n                speedRate: [\"0.75\", \"1.0\", \"1.25\", \"1.5\", \"2.0\"], //播放倍速\r\n                loop: false, //循环播放\r\n                mirror: false, //镜像画面\r\n                ligthOff: false, //关灯模式 \r\n                control: true, //是否显示控制\r\n                controlBtns: [\r\n                    \"audioTrack\",\r\n                    \"quality\",\r\n                    \"speedRate\",\r\n                    \"volume\",\r\n                    \"setting\",\r\n                    \"pip\",\r\n                    \"pageFullScreen\",\r\n                    \"fullScreen\",\r\n                ],\r\n            });\r\n\r\n            const load = async () => {\r\n                const res = await API.getVideo(route.params.videoID);\r\n                video.value = res.data;\r\n                console.log(\"video data is: \",video.value);\r\n                videoUrl.value = video.value.URL;\r\n                console.log(\"Avatar data is: \",video.value.Avatar);\r\n                if(video.value.Avatar.length != 0) {\r\n                    console.log(\"ther is a pic data\", video.value.Avatar)\r\n                    postUrl.value = video.value.Avatar;\r\n                } else {\r\n                    console.log(\"ther is no pic data\")\r\n                    postUrl.value = \"https://cdn.jsdelivr.net/gh/xdlumia/files/video-play/ironMan.jpg\";\r\n                }\r\n                console.log(\"url is: \",videoUrl.value);\r\n                console.log(\"Avatar is: \",postUrl.value);\r\n            };\r\n\r\n            // const formatDate = (date) => {\r\n            //     return moment(date).format(\"YYYY-MM-DD h:mm:ss\");\r\n            // };\r\n\r\n            // onMounted(load);\r\n            onBeforeMount(load);\r\n            return {\r\n                video,\r\n                videoUrl,\r\n                postUrl,\r\n                // formatDate,\r\n                playerOptions\r\n            };\r\n        },\r\n    };\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n<!-- <template>\r\n        <div class=\"post-video\">\r\n        <div class=\"video-header\">\r\n            <h2>{{video.title}}</h2>\r\n            <div class=\"video-data\">\r\n                {{ formatDate(video.created_at) }}\r\n                {{video.view}}\r\n            </div>\r\n        </div>\r\n        <vm-player v-if=\"videoUrl\" playsinline controls>\r\n            <vm-video>\r\n                <vm-file :src=\"videoUrl\"  />\r\n            </vm-video>\r\n        </vm-player>\r\n        <div class=\"video-info\">\r\n            <pre>{{video.info}}</pre>\r\n        </div>\r\n        </div>\r\n    </template>\r\n    \r\n    <script>\r\n        import { ref, onMounted } from 'vue';\r\n        import { useRoute } from 'vue-router';\r\n        import { VmPlayer, VmVideo, VmFile} from '@vime/core';\r\n        import * as API from '@/api/video/';\r\n        import moment from 'moment';\r\n\r\n\r\n        customElements.define('vm-player', VmPlayer);\r\n        customElements.define('vm-video', VmVideo);\r\n        customElements.define('vm-file', VmFile);\r\n\r\n        export default {\r\n            name: 'ShowVideo',\r\n            setup() {\r\n                const video = ref({});\r\n                const route = useRoute();\r\n                const videoUrl = ref('');\r\n\r\n                const load = async () => {\r\n                    const res = await API.getVideo(route.params.videoID);\r\n                    video.value = res.data;\r\n                    console.log(\"video data is: \",video.value);\r\n                    // videoUrl.value = video.value.URL;\r\n                    videoUrl.value =\"https://vjs.zencdn.net/v/oceans.mp4\";\r\n                    console.log(\"url is: \",videoUrl.value);\r\n                };\r\n\r\n                const formatDate = (date) => {\r\n                    return moment(date).format(\"YYYY-MM-DD h:mm:ss\");\r\n                };\r\n\r\n                onMounted(load);\r\n\r\n                return {\r\n                    video,\r\n                    videoUrl,\r\n                    formatDate,\r\n                };\r\n            },\r\n        };\r\n    </script> -->\r\n  \r\n<!-- <template>\r\n    <div class=\"post-video\">\r\n        <el-row :gutter=\"20\">\r\n            <el-col :span=\"16\">\r\n                <video-player\r\n                    ref=\"videoPlayer\"\r\n                    controls\r\n                    class=\"video-player-box video-js\"    \r\n                    :options=\"playerOptions\"\r\n                    :loop=\"true\"\r\n                    :volume=\"0.4\"\r\n                />\r\n            </el-col>\r\n        </el-row>\r\n    </div>      \r\n</template>\r\n\r\n<script>\r\n    import { defineComponent } from 'vue'\r\n    import { VideoPlayer } from '@videojs-player/vue'\r\n    // import 'video.js/dist/video-js.css'\r\n    // import 'vue-video-player/src/custom-theme.css'\r\n    // import { VideoJsPlayer } from 'video.js'\r\n    // import { VideoPlayer } from \"vue-video-player\";\r\n    import 'video.js/dist/video-js.css'\r\n    import * as API from '@/api/video/'\r\n\r\n    export default defineComponent({\r\n        name: 'ShowVideo',\r\n        components: {\r\n            VideoPlayer\r\n        },\r\n        data() {\r\n            return {\r\n                video:{},\r\n                playerOptions: {\r\n                    playbackRates: [0.7, 1.0, 1.5, 2.0],\r\n                    preload: 'auto',\r\n                    fluid: true,\r\n                    // autoplay: false,\r\n                    sources: [\r\n                        {\r\n                        type: 'video/mp4',\r\n                        src: \"https://dash.akamaized.net/dash264/TestCasesIOP33/adapatationSetSwitching/5/manifest.mpd\",\r\n                        }\r\n                    ],\r\n                    controlBar: {\r\n                        timeDivider: true,           // 当前时间和持续时间的分隔符\r\n                        durationDisplay: true,       // 显示持续时间\r\n                        remainingTimeDisplay: false, // 是否显示剩余时间功能\r\n                        fullscreenToggle: true       // 是否显示全屏按钮\r\n                    },\r\n                    poster: \"https://th.bing.com/th/id/OIP.sOM4UHjx7bd74gvsy2gRvQHaHa?pid=ImgDet&rs=1\",\r\n                },\r\n            };\r\n        },\r\n        mounted(){\r\n            this.load();\r\n        },\r\n        methods: {\r\n            load() {\r\n                API.getVideo(this.$route.params.videoID).then((res) => {\r\n                    this.video = res.data;\r\n                    const tempURL = this.video.URL;\r\n                    console.log(\"the url is: \"+ tempURL);\r\n                    this.playerOptions.sources[0].src = tempURL.trim();\r\n                    console.log(\"if Videoplayer exists\",this.$refs.videoPlayer)\r\n                    \r\n                    this.$nextTick(() => {\r\n                        console.log(\"player name\",this.$refs.videoPlayer.id);\r\n                        if (this.$refs.videoPlayer.player) {\r\n                            this.$refs.videoPlayer.player.src(this.playerOptions.sources[0]);\r\n                        }\r\n                    });\r\n\r\n\r\n                    \r\n                    // this.playerOptions.sources[0].src = \"https://onlinecslearning-vue.oss-cn-hongkong.aliyuncs.com/testvodep_2.mp4\"\r\n                    // this.playerOptions.sources[0].src = \"https://onlinecslearning-vue.oss-cn-hongkong.aliyuncs.com/CS107-lecture03_1.mp4\"\r\n                });\r\n            }\r\n        },\r\n        \r\n        // beforeMount() {\r\n        //     this.load(); \r\n        // },\r\n    })\r\n</script> -->\r\n<!-- \r\n<style>\r\n    .video-player-box {\r\n        max-width: 100%;\r\n    }\r\n    .vjs-poster {\r\n        background-color: #aaaaaa00;\r\n    }\r\n\r\n    /*播放按钮设置成宽高一致，圆形，居中*/\r\n    .vjs-custom-skin > .video-js .vjs-big-play-button {\r\n    outline: none;\r\n    border: none;\r\n    width: 66px;\r\n    height: 66px !important;\r\n    background-color: rgba(0,0,0,0) !important;\r\n    }\r\n\r\n    .video-js .vjs-big-play-button .vjs-icon-placeholder:before {\r\n    content: '';\r\n    width: 66px;\r\n    height: 66px;\r\n    /* background: url('../assets/icon_stop@2x.png') no-repeat; */\r\n    background-size: 100% 100%;\r\n    }\r\n\r\n\r\n    /*control-bar布局时flex，通过order调整剩余时间的位置到进度条右边*/\r\n    .vjs-custom-skin > .video-js .vjs-control-bar .vjs-remaining-time{\r\n    order:3 !important;\r\n    }\r\n\r\n    /* 进度条下面的播放按钮 */\r\n    .vjs-custom-skin > .video-js .vjs-control-bar .vjs-play-control {\r\n    margin: 0;\r\n    line-height: 20px;\r\n    height: 94px;\r\n    padding: 50px 0 24px 0;\r\n    }\r\n    .vjs-custom-skin > .video-js .vjs-control-bar .vjs-play-control .vjs-icon-placeholder:before {\r\n    position: absolute;\r\n    font-size: 20px;\r\n    top: 44px;\r\n    left: 24px;\r\n    width: 20px;\r\n    height: 20px;\r\n    }\r\n\r\n    /** 时间组件 */\r\n    .vjs-custom-skin > .video-js .vjs-control-bar .vjs-time-control {\r\n    margin: 0;\r\n    line-height: 20px;\r\n    height: 94px;\r\n    padding: 50px 0 24px 0;\r\n    min-width: auto;\r\n    }\r\n    /* 时间-左 */\r\n    .video-js .vjs-current-time, .vjs-no-flex .vjs-current-time {\r\n    min-width: 32px;\r\n    font-size: 12px;\r\n    font-family: PingFangSC-Regular, PingFang SC;\r\n    font-weight: 400;\r\n    color: #FFFFFF;\r\n    line-height: 20px;\r\n    margin: 0 0 0 24px !important;\r\n    }\r\n    /* 下面控件的时间分割线 */\r\n    .vjs-custom-skin > .video-js .vjs-control-bar .vjs-time-divider {\r\n    min-width: 6px;\r\n    margin: 0 8px !important;\r\n    font-size: 12px;\r\n    font-family: PingFangSC-Regular, PingFang SC;\r\n    font-weight: 400;\r\n    color: rgba(255,255,255,0.2);\r\n    line-height: 20px;\r\n    }\r\n    /* 时间-右 */\r\n    .video-js .vjs-duration, .vjs-no-flex .vjs-duration {\r\n    font-size: 12px;\r\n    font-family: PingFangSC-Regular, PingFang SC;\r\n    font-weight: 400;\r\n    color: #FFFFFF;\r\n    line-height: 20px;\r\n    }\r\n    .video-js .vjs-control-bar {\r\n    height: 94px;\r\n    background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(0,0,0,0.7) 100%)\r\n    }\r\n    /*进度条单独放置一行*/\r\n    .vjs-custom-skin > .video-js .vjs-progress-control.vjs-control{\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 68px;\r\n    width: 100%;\r\n    height: 2px;\r\n    padding: 0 24px;\r\n    }\r\n    /* 进度条背景轨道 */\r\n    .video-js .vjs-slider{\r\n    border-radius: 1em;\r\n    background-color: rgba(255,255,255,0.2);\r\n    }\r\n    /* 加载进度条背景色 */\r\n    .video-js .vjs-load-progress {\r\n    background: rgba(255,255,255,0.1);\r\n    }\r\n    /* 进度条进度 */\r\n    .vjs-custom-skin > .video-js .vjs-play-progress, .vjs-custom-skin > .video-js .vjs-volume-level{\r\n    border-radius: 1px;\r\n    background: #FFFFFF;\r\n    }\r\n    \r\n    /*鼠标进入播放器后，播放按钮颜色会变*/\r\n    .video-js:hover .vjs-big-play-button, .vjs-custom-skin>.video-js .vjs-big-play-button:active, .vjs-custom-skin>.video-js .vjs-big-play-button:focus{\r\n    background-color: rgba(0,0,0,0) !important;\r\n    }\r\n    \r\n    /*control bar*/\r\n    .video-js .vjs-control-bar{\r\n    background-color: rgba(0,0,0,0.2) !important;\r\n    }\r\n    \r\n    /*点击按钮时不显示蓝色边框*/\r\n    .video-js .vjs-control-bar button{\r\n    outline: none;\r\n    }\r\n    .vjs-volume-panel .vjs-control .vjs-volume-panel-horizontal {\r\n    width: 0;\r\n    display: none;\r\n    }\r\n    /** 隐藏倍速 */\r\n    .vjs-custom-skin > .video-js .vjs-control-bar .vjs-playback-rate {\r\n    display: none;\r\n    }\r\n    /** 音量按钮 */\r\n    .video-js .vjs-volume-panel {\r\n    /* display: none; */\r\n    position: absolute;\r\n    right: 48px;\r\n    bottom: 24px;\r\n    width: 20px;\r\n    height: 20px;\r\n    }\r\n    .vjs-icon-volume-high:before, .video-js .vjs-mute-control .vjs-icon-placeholder:before {\r\n    font-size: 20px;\r\n    width: 20px;\r\n    height: 20px;\r\n    line-height: 20px;\r\n    color: rgba(255,255,255,0.9);\r\n    }\r\n    .video-js .vjs-volume-bar {\r\n    margin: 8px 16px 8px 0;\r\n    }\r\n    .video-js .vjs-volume-level {\r\n    left: -21px;\r\n    }\r\n    /* 全屏组件 */\r\n    .vjs-custom-skin > .video-js .vjs-control-bar .vjs-fullscreen-control {\r\n    position: absolute;\r\n    right: 24px;\r\n    bottom: 24px;\r\n    width: 20px;\r\n    height: 20px;\r\n    }\r\n    .video-js .vjs-big-play-button .vjs-icon-placeholder:before, .vjs-button > .vjs-icon-placeholder:before {\r\n    text-align: right;\r\n    }\r\n    /* 全屏按钮图标 */\r\n    .vjs-icon-fullscreen-enter:before, .video-js .vjs-fullscreen-control .vjs-icon-placeholder:before {\r\n    content: '';\r\n    width: 20px;\r\n    height: 20px;\r\n    /* background: url('../assets/icon_full@2x.png') no-repeat; */\r\n    background-size: 100% 100%;\r\n    }\r\n    /* 全屏播放后隐藏自定义全屏图标 */\r\n</style> -->\r\n\r\n\r\n<!-- \r\n    <style>\r\n    .video /*可不设置*/\r\n    {\r\n        margin: 48px 0;\r\n    }\r\n    .vjs-poster {\r\n        background-color: #aaaaaa00;\r\n    }\r\n\r\n    /*播放按钮设置成宽高一致，圆形，居中*/\r\n    .vjs-custom-skin > .video-js .vjs-big-play-button {\r\n    outline: none;\r\n    border: none;\r\n    width: 66px;\r\n    height: 66px !important;\r\n    background-color: rgba(0,0,0,0) !important;\r\n    }\r\n\r\n    .video-js .vjs-big-play-button .vjs-icon-placeholder:before {\r\n    content: '';\r\n    width: 66px;\r\n    height: 66px;\r\n    /* background: url('../assets/icon_stop@2x.png') no-repeat; */\r\n    background-size: 100% 100%;\r\n    }\r\n\r\n\r\n    /*control-bar布局时flex，通过order调整剩余时间的位置到进度条右边*/\r\n    .vjs-custom-skin > .video-js .vjs-control-bar .vjs-remaining-time{\r\n    order:3 !important;\r\n    }\r\n\r\n    /* 进度条下面的播放按钮 */\r\n    .vjs-custom-skin > .video-js .vjs-control-bar .vjs-play-control {\r\n    margin: 0;\r\n    line-height: 20px;\r\n    height: 94px;\r\n    padding: 50px 0 24px 0;\r\n    }\r\n    .vjs-custom-skin > .video-js .vjs-control-bar .vjs-play-control .vjs-icon-placeholder:before {\r\n    position: absolute;\r\n    font-size: 20px;\r\n    top: 44px;\r\n    left: 24px;\r\n    width: 20px;\r\n    height: 20px;\r\n    }\r\n\r\n    /** 时间组件 */\r\n    .vjs-custom-skin > .video-js .vjs-control-bar .vjs-time-control {\r\n    margin: 0;\r\n    line-height: 20px;\r\n    height: 94px;\r\n    padding: 50px 0 24px 0;\r\n    min-width: auto;\r\n    }\r\n    /* 时间-左 */\r\n    .video-js .vjs-current-time, .vjs-no-flex .vjs-current-time {\r\n    min-width: 32px;\r\n    font-size: 12px;\r\n    font-family: PingFangSC-Regular, PingFang SC;\r\n    font-weight: 400;\r\n    color: #FFFFFF;\r\n    line-height: 20px;\r\n    margin: 0 0 0 24px !important;\r\n    }\r\n    /* 下面控件的时间分割线 */\r\n    .vjs-custom-skin > .video-js .vjs-control-bar .vjs-time-divider {\r\n    min-width: 6px;\r\n    margin: 0 8px !important;\r\n    font-size: 12px;\r\n    font-family: PingFangSC-Regular, PingFang SC;\r\n    font-weight: 400;\r\n    color: rgba(255,255,255,0.2);\r\n    line-height: 20px;\r\n    }\r\n    /* 时间-右 */\r\n    .video-js .vjs-duration, .vjs-no-flex .vjs-duration {\r\n    font-size: 12px;\r\n    font-family: PingFangSC-Regular, PingFang SC;\r\n    font-weight: 400;\r\n    color: #FFFFFF;\r\n    line-height: 20px;\r\n    }\r\n    .video-js .vjs-control-bar {\r\n    height: 94px;\r\n    background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(0,0,0,0.7) 100%)\r\n    }\r\n    /*进度条单独放置一行*/\r\n    .vjs-custom-skin > .video-js .vjs-progress-control.vjs-control{\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 68px;\r\n    width: 100%;\r\n    height: 2px;\r\n    padding: 0 24px;\r\n    }\r\n    /* 进度条背景轨道 */\r\n    .video-js .vjs-slider{\r\n    border-radius: 1em;\r\n    background-color: rgba(255,255,255,0.2);\r\n    }\r\n    /* 加载进度条背景色 */\r\n    .video-js .vjs-load-progress {\r\n    background: rgba(255,255,255,0.1);\r\n    }\r\n    /* 进度条进度 */\r\n    .vjs-custom-skin > .video-js .vjs-play-progress, .vjs-custom-skin > .video-js .vjs-volume-level{\r\n    border-radius: 1px;\r\n    background: #FFFFFF;\r\n    }\r\n    \r\n    /*鼠标进入播放器后，播放按钮颜色会变*/\r\n    .video-js:hover .vjs-big-play-button, .vjs-custom-skin>.video-js .vjs-big-play-button:active, .vjs-custom-skin>.video-js .vjs-big-play-button:focus{\r\n    background-color: rgba(0,0,0,0) !important;\r\n    }\r\n    \r\n    /*control bar*/\r\n    .video-js .vjs-control-bar{\r\n    background-color: rgba(0,0,0,0.2) !important;\r\n    }\r\n    \r\n    /*点击按钮时不显示蓝色边框*/\r\n    .video-js .vjs-control-bar button{\r\n    outline: none;\r\n    }\r\n    .vjs-volume-panel .vjs-control .vjs-volume-panel-horizontal {\r\n    width: 0;\r\n    display: none;\r\n    }\r\n    /** 隐藏倍速 */\r\n    .vjs-custom-skin > .video-js .vjs-control-bar .vjs-playback-rate {\r\n    display: none;\r\n    }\r\n    /** 音量按钮 */\r\n    .video-js .vjs-volume-panel {\r\n    /* display: none; */\r\n    position: absolute;\r\n    right: 48px;\r\n    bottom: 24px;\r\n    width: 20px;\r\n    height: 20px;\r\n    }\r\n    .vjs-icon-volume-high:before, .video-js .vjs-mute-control .vjs-icon-placeholder:before {\r\n    font-size: 20px;\r\n    width: 20px;\r\n    height: 20px;\r\n    line-height: 20px;\r\n    color: rgba(255,255,255,0.9);\r\n    }\r\n    .video-js .vjs-volume-bar {\r\n    margin: 8px 16px 8px 0;\r\n    }\r\n    .video-js .vjs-volume-level {\r\n    left: -21px;\r\n    }\r\n    /* 全屏组件 */\r\n    .vjs-custom-skin > .video-js .vjs-control-bar .vjs-fullscreen-control {\r\n    position: absolute;\r\n    right: 24px;\r\n    bottom: 24px;\r\n    width: 20px;\r\n    height: 20px;\r\n    }\r\n    .video-js .vjs-big-play-button .vjs-icon-placeholder:before, .vjs-button > .vjs-icon-placeholder:before {\r\n    text-align: right;\r\n    }\r\n    /* 全屏按钮图标 */\r\n    .vjs-icon-fullscreen-enter:before, .video-js .vjs-fullscreen-control .vjs-icon-placeholder:before {\r\n    content: '';\r\n    width: 20px;\r\n    height: 20px;\r\n    /* background: url('../assets/icon_full@2x.png') no-repeat; */\r\n    background-size: 100% 100%;\r\n    }\r\n    /* 全屏播放后隐藏自定义全屏图标 */\r\n    .vjs-icon-fullscreen-exit:before, .video-js.vjs-fullscreen .vjs-fullscreen-control .vjs-icon-placeholder:before {\r\n    background: url('');\r\n    line-height: 20px;\r\n    margin-right: 10px;\r\n    }\r\n    </style> -->\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  <!-- <script>\r\n    import { defineComponent } from 'vue'\r\n    import { VideoPlayer } from '@videojs-player/vue'\r\n    // import { videoPlayer } from 'vue-video-player'\r\n    // import 'video.js/dist/video-js.css'\r\n    // import 'vue-video-player/src/custom-theme.css'\r\n    // import { VideoJsPlayer } from 'video.js'\r\n    // import { VideoPlayer } from \"vue-video-player\";\r\n    import 'video.js/dist/video-js.css'\r\n    import * as API from '@/api/video/'\r\n\r\n    export default defineComponent({\r\n        name: 'ShowVideo',\r\n        data() {\r\n            return {\r\n                video:{},\r\n                playerOptions: {\r\n                    playbackRates: [0.7, 1.0, 1.5, 2.0],\r\n                    preload: 'auto',\r\n                    fluid: true,\r\n                    // autoplay: false,\r\n                    sources: [\r\n                        {\r\n                        type: 'video/mp4',\r\n                        src: \"https://dash.akamaized.net/dash264/TestCasesIOP33/adapatationSetSwitching/5/manifest.mpd\",\r\n                        }\r\n                    ],\r\n                    controlBar: {\r\n                    timeDivider: true,           // 当前时间和持续时间的分隔符\r\n                    durationDisplay: true,       // 显示持续时间\r\n                    remainingTimeDisplay: false, // 是否显示剩余时间功能\r\n                    fullscreenToggle: true       // 是否显示全屏按钮\r\n                },\r\n                    poster: \"https://th.bing.com/th/id/OIP.sOM4UHjx7bd74gvsy2gRvQHaHa?pid=ImgDet&rs=1\",\r\n                },\r\n            };\r\n        },\r\n        mounted(){\r\n            this.load();\r\n        },\r\n        methods: {\r\n            load() {\r\n                API.getVideo(this.$route.params.videoID).then((res) => {\r\n                    this.video = res.data;\r\n                    const tempURL = this.video.URL;\r\n                    console.log(\"the url is: \"+ tempURL);\r\n                    this.playerOptions.sources[0].src = tempURL.trim();\r\n                    console.log(\"if Videoplayer exists\",this.$refs.videoPlayer)\r\n                    \r\n                    this.$nextTick(() => {\r\n                        console.log(\"player name\",this.$refs.videoPlayer.player);\r\n                        if (this.$refs.videoPlayer.player) {\r\n                            this.$refs.videoPlayer.player.src(this.playerOptions.sources[0]);\r\n                        }\r\n                    });\r\n                    // this.playerOptions.sources[0].src = \"https://onlinecslearning-vue.oss-cn-hongkong.aliyuncs.com/testvodep_2.mp4\"\r\n                    // this.playerOptions.sources[0].src = \"https://onlinecslearning-vue.oss-cn-hongkong.aliyuncs.com/CS107-lecture03_1.mp4\"\r\n                });\r\n            }\r\n        },\r\n        components: {\r\n            VideoPlayer\r\n        },\r\n        beforeMount() {\r\n            this.load(); \r\n        },\r\n    })\r\n  </script>\r\n\r\n<style>\r\n.video-player-box {\r\n    max-width: 100%;\r\n}\r\n</style> -->","import { render } from \"./ShowVideo.vue?vue&type=template&id=319a76c6\"\nimport script from \"./ShowVideo.vue?vue&type=script&lang=js\"\nexport * from \"./ShowVideo.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\FullStackDevelop\\\\OnlineCourseLearning\\\\onlinelearning\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["logUser","form","axios","then","res","data","regUser","class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_el_form","ref","model","$data","_component_el_form_item","label","_component_el_input","user_name","$event","style","password","password_confirm","nickname","_component_el_button","type","onClick","$options","OnSubmit","name","methods","regAPI","this","console","log","msg","status","$notify","error","title","message","catch","components","__exports__","render","url","info","_component_el_upload","action","handlePictureCardPreview","handleAvatarSuccess","fnBeforeUpload","fnUploadRequest","tip","_withCtx","_hoisted_5","imageUrl","src","_hoisted_4","_component_el_dialog","visible","dialogVisible","_cache","width","dialogImageUrl","alt","postUploadToken","fileName","filename","avatar","file","URL","createObjectURL","raw","isImage","isLt2M","size","$message","option","uploadAPI","oReq","XMLHttpRequest","open","put","withCredentials","send","onload","get","key","API","code","id","logAPI","_toDisplayString","$setup","video","_hoisted_3","view","_component_videoPlay","_mergeProps","playerOptions","poster","postUrl","videoPlay","setup","route","useRoute","videoUrl","reactive","height","color","autoplay","muted","webFullScreen","speedRate","loop","mirror","ligthOff","control","controlBtns","load","async","params","videoID","value","Avatar","length","onBeforeMount"],"sourceRoot":""}